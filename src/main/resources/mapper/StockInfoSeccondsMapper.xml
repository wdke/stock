<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wdke.stock.storage.dao.StockInfoSeccondsMapper">
    <resultMap id="BaseResultMap" type="com.wdke.stock.storage.entity.StockInfoSecconds">
        <id column="stock_code" jdbcType="VARCHAR" property="stockCode"/>
        <id column="stock_type" jdbcType="INTEGER" property="stockType"/>
        <id column="secconds" jdbcType="BIGINT" property="secconds"/>
        <result column="stock_name" jdbcType="VARCHAR" property="stockName"/>
        <result column="yest_close" jdbcType="REAL" property="yestClose"/>
        <result column="price" jdbcType="REAL" property="price"/>
        <result column="ave_price" jdbcType="REAL" property="avePrice"/>
        <result column="volume" jdbcType="BIGINT" property="volume"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    stock_code, stock_type, secconds, stock_name, yest_close, price, ave_price, volume, 
    create_date, update_date
  </sql>
    <select id="selectByExample" parameterType="com.wdke.stock.storage.entity.StockInfoSeccondsExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from stock_info_secconds
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="offset != null and limit != null">
            limit ${offset}, ${limit}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="com.wdke.stock.storage.entity.StockInfoSeccondsKey"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from stock_info_secconds
        where stock_code = #{stockCode,jdbcType=VARCHAR}
        and stock_type = #{stockType,jdbcType=INTEGER}
        and secconds = #{secconds,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="com.wdke.stock.storage.entity.StockInfoSeccondsKey">
    delete from stock_info_secconds
    where stock_code = #{stockCode,jdbcType=VARCHAR}
      and stock_type = #{stockType,jdbcType=INTEGER}
      and secconds = #{secconds,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.wdke.stock.storage.entity.StockInfoSeccondsExample">
        delete from stock_info_secconds
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.wdke.stock.storage.entity.StockInfoSecconds">
    insert into stock_info_secconds (stock_code, stock_type, secconds, 
      stock_name, yest_close, price, 
      ave_price, volume, create_date, 
      update_date)
    values (#{stockCode,jdbcType=VARCHAR}, #{stockType,jdbcType=INTEGER}, #{secconds,jdbcType=BIGINT}, 
      #{stockName,jdbcType=VARCHAR}, #{yestClose,jdbcType=REAL}, #{price,jdbcType=REAL}, 
      #{avePrice,jdbcType=REAL}, #{volume,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.wdke.stock.storage.entity.StockInfoSecconds">
        insert into stock_info_secconds
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="stockCode != null">
                stock_code,
            </if>
            <if test="stockType != null">
                stock_type,
            </if>
            <if test="secconds != null">
                secconds,
            </if>
            <if test="stockName != null">
                stock_name,
            </if>
            <if test="yestClose != null">
                yest_close,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="avePrice != null">
                ave_price,
            </if>
            <if test="volume != null">
                volume,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="stockCode != null">
                #{stockCode,jdbcType=VARCHAR},
            </if>
            <if test="stockType != null">
                #{stockType,jdbcType=INTEGER},
            </if>
            <if test="secconds != null">
                #{secconds,jdbcType=BIGINT},
            </if>
            <if test="stockName != null">
                #{stockName,jdbcType=VARCHAR},
            </if>
            <if test="yestClose != null">
                #{yestClose,jdbcType=REAL},
            </if>
            <if test="price != null">
                #{price,jdbcType=REAL},
            </if>
            <if test="avePrice != null">
                #{avePrice,jdbcType=REAL},
            </if>
            <if test="volume != null">
                #{volume,jdbcType=BIGINT},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.wdke.stock.storage.entity.StockInfoSeccondsExample"
            resultType="java.lang.Long">
        select count(*) from stock_info_secconds
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update stock_info_secconds
        <set>
            <if test="record.stockCode != null">
                stock_code = #{record.stockCode,jdbcType=VARCHAR},
            </if>
            <if test="record.stockType != null">
                stock_type = #{record.stockType,jdbcType=INTEGER},
            </if>
            <if test="record.secconds != null">
                secconds = #{record.secconds,jdbcType=BIGINT},
            </if>
            <if test="record.stockName != null">
                stock_name = #{record.stockName,jdbcType=VARCHAR},
            </if>
            <if test="record.yestClose != null">
                yest_close = #{record.yestClose,jdbcType=REAL},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=REAL},
            </if>
            <if test="record.avePrice != null">
                ave_price = #{record.avePrice,jdbcType=REAL},
            </if>
            <if test="record.volume != null">
                volume = #{record.volume,jdbcType=BIGINT},
            </if>
            <if test="record.createDate != null">
                create_date = #{record.createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateDate != null">
                update_date = #{record.updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateSql != null">
                ${record.updateSql},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update stock_info_secconds
        set stock_code = #{record.stockCode,jdbcType=VARCHAR},
        stock_type = #{record.stockType,jdbcType=INTEGER},
        secconds = #{record.secconds,jdbcType=BIGINT},
        stock_name = #{record.stockName,jdbcType=VARCHAR},
        yest_close = #{record.yestClose,jdbcType=REAL},
        price = #{record.price,jdbcType=REAL},
        ave_price = #{record.avePrice,jdbcType=REAL},
        volume = #{record.volume,jdbcType=BIGINT},
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
        update_date = #{record.updateDate,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.wdke.stock.storage.entity.StockInfoSecconds">
        update stock_info_secconds
        <set>
            <if test="stockName != null">
                stock_name = #{stockName,jdbcType=VARCHAR},
            </if>
            <if test="yestClose != null">
                yest_close = #{yestClose,jdbcType=REAL},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=REAL},
            </if>
            <if test="avePrice != null">
                ave_price = #{avePrice,jdbcType=REAL},
            </if>
            <if test="volume != null">
                volume = #{volume,jdbcType=BIGINT},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where stock_code = #{stockCode,jdbcType=VARCHAR}
        and stock_type = #{stockType,jdbcType=INTEGER}
        and secconds = #{secconds,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.wdke.stock.storage.entity.StockInfoSecconds">
    update stock_info_secconds
    set stock_name = #{stockName,jdbcType=VARCHAR},
      yest_close = #{yestClose,jdbcType=REAL},
      price = #{price,jdbcType=REAL},
      ave_price = #{avePrice,jdbcType=REAL},
      volume = #{volume,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where stock_code = #{stockCode,jdbcType=VARCHAR}
      and stock_type = #{stockType,jdbcType=INTEGER}
      and secconds = #{secconds,jdbcType=BIGINT}
  </update>
    <select id="selectByExampleWithRowbounds" parameterType="com.wdke.stock.storage.entity.StockInfoSeccondsExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from stock_info_secconds
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="sumByExample" parameterType="com.wdke.stock.storage.entity.StockInfoSeccondsExample" resultType="long">
        select sum(${sumCol}) from stock_info_secconds
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <insert id="batchInsert">
        <if test="items.get(0) != null">
            insert into stock_info_secconds (stock_code, stock_type, secconds,
            stock_name, yest_close, price,
            ave_price, volume, create_date,
            update_date)
            values
            <foreach collection="items" item="item" index="index" separator=",">
                (#{item.stockCode,jdbcType=VARCHAR}, #{item.stockType,jdbcType=INTEGER},
                #{item.secconds,jdbcType=BIGINT},
                #{item.stockName,jdbcType=VARCHAR}, #{item.yestClose,jdbcType=REAL}, #{item.price,jdbcType=REAL},
                #{item.avePrice,jdbcType=REAL}, #{item.volume,jdbcType=BIGINT}, #{item.createDate,jdbcType=TIMESTAMP},
                #{item.updateDate,jdbcType=TIMESTAMP})
            </foreach>

            ON DUPLICATE KEY UPDATE
            price=values(price),
            ave_price=values(ave_price)
        </if>
    </insert>
</mapper>