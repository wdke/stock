<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wdke.stock.storage.dao.StockHoldingsMapper">
  <resultMap id="BaseResultMap" type="com.wdke.stock.storage.entity.StockHoldings">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="stock_code" jdbcType="VARCHAR" property="stockCode" />
    <result column="stock_type" jdbcType="INTEGER" property="stockType" />
    <result column="stock_name" jdbcType="VARCHAR" property="stockName" />
    <result column="buy_money" jdbcType="REAL" property="buyMoney" />
    <result column="sell_money" jdbcType="REAL" property="sellMoney" />
    <result column="hold_number" jdbcType="INTEGER" property="holdNumber" />
    <result column="base_price" jdbcType="REAL" property="basePrice" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, stock_code, stock_type, stock_name, buy_money, sell_money, hold_number, base_price, 
    user_id, create_date, update_date
  </sql>
  <select id="selectByExample" parameterType="com.wdke.stock.storage.entity.StockHoldingsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stock_holdings
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offset != null and limit != null">
      limit ${offset}, ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stock_holdings
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stock_holdings
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wdke.stock.storage.entity.StockHoldingsExample">
    delete from stock_holdings
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wdke.stock.storage.entity.StockHoldings">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into stock_holdings (stock_code, stock_type, stock_name, 
      buy_money, sell_money, hold_number, 
      base_price, user_id, create_date, 
      update_date)
    values (#{stockCode,jdbcType=VARCHAR}, #{stockType,jdbcType=INTEGER}, #{stockName,jdbcType=VARCHAR}, 
      #{buyMoney,jdbcType=REAL}, #{sellMoney,jdbcType=REAL}, #{holdNumber,jdbcType=INTEGER}, 
      #{basePrice,jdbcType=REAL}, #{userId,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.wdke.stock.storage.entity.StockHoldings">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into stock_holdings
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stockCode != null">
        stock_code,
      </if>
      <if test="stockType != null">
        stock_type,
      </if>
      <if test="stockName != null">
        stock_name,
      </if>
      <if test="buyMoney != null">
        buy_money,
      </if>
      <if test="sellMoney != null">
        sell_money,
      </if>
      <if test="holdNumber != null">
        hold_number,
      </if>
      <if test="basePrice != null">
        base_price,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stockCode != null">
        #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="stockType != null">
        #{stockType,jdbcType=INTEGER},
      </if>
      <if test="stockName != null">
        #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="buyMoney != null">
        #{buyMoney,jdbcType=REAL},
      </if>
      <if test="sellMoney != null">
        #{sellMoney,jdbcType=REAL},
      </if>
      <if test="holdNumber != null">
        #{holdNumber,jdbcType=INTEGER},
      </if>
      <if test="basePrice != null">
        #{basePrice,jdbcType=REAL},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wdke.stock.storage.entity.StockHoldingsExample" resultType="java.lang.Long">
    select count(*) from stock_holdings
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update stock_holdings
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stockCode != null">
        stock_code = #{record.stockCode,jdbcType=VARCHAR},
      </if>
      <if test="record.stockType != null">
        stock_type = #{record.stockType,jdbcType=INTEGER},
      </if>
      <if test="record.stockName != null">
        stock_name = #{record.stockName,jdbcType=VARCHAR},
      </if>
      <if test="record.buyMoney != null">
        buy_money = #{record.buyMoney,jdbcType=REAL},
      </if>
      <if test="record.sellMoney != null">
        sell_money = #{record.sellMoney,jdbcType=REAL},
      </if>
      <if test="record.holdNumber != null">
        hold_number = #{record.holdNumber,jdbcType=INTEGER},
      </if>
      <if test="record.basePrice != null">
        base_price = #{record.basePrice,jdbcType=REAL},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateSql != null" >
        ${record.updateSql},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update stock_holdings
    set id = #{record.id,jdbcType=INTEGER},
      stock_code = #{record.stockCode,jdbcType=VARCHAR},
      stock_type = #{record.stockType,jdbcType=INTEGER},
      stock_name = #{record.stockName,jdbcType=VARCHAR},
      buy_money = #{record.buyMoney,jdbcType=REAL},
      sell_money = #{record.sellMoney,jdbcType=REAL},
      hold_number = #{record.holdNumber,jdbcType=INTEGER},
      base_price = #{record.basePrice,jdbcType=REAL},
      user_id = #{record.userId,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wdke.stock.storage.entity.StockHoldings">
    update stock_holdings
    <set>
      <if test="stockCode != null">
        stock_code = #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="stockType != null">
        stock_type = #{stockType,jdbcType=INTEGER},
      </if>
      <if test="stockName != null">
        stock_name = #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="buyMoney != null">
        buy_money = #{buyMoney,jdbcType=REAL},
      </if>
      <if test="sellMoney != null">
        sell_money = #{sellMoney,jdbcType=REAL},
      </if>
      <if test="holdNumber != null">
        hold_number = #{holdNumber,jdbcType=INTEGER},
      </if>
      <if test="basePrice != null">
        base_price = #{basePrice,jdbcType=REAL},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wdke.stock.storage.entity.StockHoldings">
    update stock_holdings
    set stock_code = #{stockCode,jdbcType=VARCHAR},
      stock_type = #{stockType,jdbcType=INTEGER},
      stock_name = #{stockName,jdbcType=VARCHAR},
      buy_money = #{buyMoney,jdbcType=REAL},
      sell_money = #{sellMoney,jdbcType=REAL},
      hold_number = #{holdNumber,jdbcType=INTEGER},
      base_price = #{basePrice,jdbcType=REAL},
      user_id = #{userId,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.wdke.stock.storage.entity.StockHoldingsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stock_holdings
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="sumByExample" parameterType="com.wdke.stock.storage.entity.StockHoldingsExample" resultType="long" >
    select sum(${sumCol}) from stock_holdings
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into stock_holdings  (stock_code, stock_type, stock_name, 
        buy_money, sell_money, hold_number, 
        base_price, user_id, create_date, 
        update_date)
      values
      <foreach collection="items" item="item" index="index" separator=",">
      (#{item.stockCode,jdbcType=VARCHAR}, #{item.stockType,jdbcType=INTEGER}, #{item.stockName,jdbcType=VARCHAR}, 
        #{item.buyMoney,jdbcType=REAL}, #{item.sellMoney,jdbcType=REAL}, #{item.holdNumber,jdbcType=INTEGER}, 
        #{item.basePrice,jdbcType=REAL}, #{item.userId,jdbcType=BIGINT}, #{item.createDate,jdbcType=TIMESTAMP}, 
        #{item.updateDate,jdbcType=TIMESTAMP})
      </foreach>
    </if>
  </insert>
</mapper>